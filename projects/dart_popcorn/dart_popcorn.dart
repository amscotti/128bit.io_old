// Auto-generated from dart_popcorn.html.
// DO NOT EDIT.

library dart_popcorn_html;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;
import 'dart:html';
import 'package:web_ui/web_ui.dart';
import 'package:js/js.dart' as js;


// Original code


final __changes = new __observe.Observable();

dynamic __$currentTime = 0;
dynamic get currentTime {
  if (__observe.observeReads) {
    __observe.notifyRead(__changes, __observe.ChangeRecord.FIELD, 'currentTime');
  }
  return __$currentTime;
}
set currentTime(dynamic value) {
  if (__observe.hasObservers(__changes)) {
    __observe.notifyChange(__changes, __observe.ChangeRecord.FIELD, 'currentTime',
        __$currentTime, value);
  }
  __$currentTime = value;
}

dynamic __$progress = 0;
dynamic get progress {
  if (__observe.observeReads) {
    __observe.notifyRead(__changes, __observe.ChangeRecord.FIELD, 'progress');
  }
  return __$progress;
}
set progress(dynamic value) {
  if (__observe.hasObservers(__changes)) {
    __observe.notifyChange(__changes, __observe.ChangeRecord.FIELD, 'progress',
        __$progress, value);
  }
  __$progress = value;
}

List<Map<String, String>> bookmarkList = toObservable(new List());

skip(time) => js.context.video.currentTime(timeToSec(time));

timeToSec(time) {
  var timeArray = time.split(":");
  var timeInSec = (int.parse(timeArray[0]) * 60) + int.parse(timeArray[1]);
  return timeInSec;
}

void main() {
  var Popcorn = js.context.Popcorn;
 
  // Create a popcorn instance by calling the Youtube player plugin
  var video = js.retain(Popcorn.youtube('#video', 'https://www.youtube.com/watch?v=QFuCFUd2Zsw'));
  js.context.video = video;
  
  //Setup Callback for updating time
  video.on("timeupdate", new js.Callback.many((var time) => currentTime = js.context.video.currentTime().truncate()));
  video.on("timeupdate", new js.Callback.many((var time) => progress = (js.context.video.currentTime().truncate()/js.context.video.duration().truncate()) * 100));
  
  // play the video right away
  video.play();
  
  // Setup bookmarks
  bookmarkList.add({'name': "Intro", 'time': "00:00"});
  bookmarkList.add({'name': "Calling JavaScript from Dart (Google Charts API)", 'time': "03:15"});
  bookmarkList.add({'name': "Calling Dart from JavaScript (JSONP request to Twitter)", 'time': "10:35"});
  bookmarkList.add({'name': "Summary of interop APIs used so far", 'time': "14:57"});
  bookmarkList.add({'name': "Managing memory in a more complex app (Google Maps API)", 'time': "17:06"});
  bookmarkList.add({'name': "Summary of interop APIs related to managing memory", 'time': "23:46"});
  
  final String footnoteNode = "footnotediv";
  
  //Setup footnotes to diskplay bookmarks titles
  for (var i = 0; i < bookmarkList.length; i++) {
    var bookmark = bookmarkList[i];
    var nextBookmark = {'time': "999:00"};
    if(bookmarkList.length > i + 1){
      nextBookmark =  bookmarkList[i + 1];
    }
    video.footnote(js.map({'start': timeToSec(bookmark['time']), 'end': timeToSec(nextBookmark['time']),  'text': bookmark['name'], 'target': footnoteNode}));
  }
}
// Additional generated code
void init_autogenerated() {
  var __root = autogenerated.document.body;
  final __html0 = new autogenerated.LIElement();
  var __e1, __e2, __e5;
  var __t = new autogenerated.Template(__root);
  __e1 = __root.nodes[1].nodes[3].nodes[3].nodes[3].nodes[1].nodes[0];
  var __binding0 = __t.contentBind(() => currentTime, false);
  __e1.nodes.addAll([new autogenerated.Text('Current time: '),
      __binding0,
      new autogenerated.Text(' sec')]);
  __e2 = __root.nodes[1].nodes[3].nodes[3].nodes[3].nodes[3].nodes[1];
  __t.bind(() => progress,  (__e) { __e2.attributes['style'] = 'width: ${__e.newValue}%;'; }, false);
  __e5 = __root.nodes[1].nodes[3].nodes[3].nodes[3].nodes[9].nodes[1];
  __t.loop(__e5, () => bookmarkList, ($list, $index, __t) {
    var bookmark = $list[$index];
    var __e4;
    __e4 = __html0.clone(true);
    var __binding3 = __t.contentBind(() => bookmark['name'], false);
    __e4.nodes.add(__binding3);
    __t.listen(__e4.onClick, ($event) { skip(bookmark['time']); });
  __t.addAll([new autogenerated.Text('\n                        '),
      __e4,
      new autogenerated.Text('\n                    ')]);
  });
  __t.create();
  __t.insert();
}

//@ sourceMappingURL=dart_popcorn.dart.map